
1.1.  В каких случаях необходима была явная передача указателя в качестве входных параметров
и возвращаемых результатов или в качестве приёмника в методах?

При передаче указателя на переменную
При передаче указателя копия значения создаваться не будет. Все изменения переменной внутри функции, на которую указывает указатель, отразиться на значении переданной в функцию переменной.
То есть, в этом случае не произойдёт выделения памяти для копии значения переменой. Это важно учитывать, когда в функцию нужно передать большой аргумент.
Соответственно передача указателя или отправка значения зависит от того, требуется ли изменить это значение. Если вы не требуется изменений значения, то надо отправлять его как значение.
А если нужно чтобы функция, куда передается переменная, могла изменять эту переменную, то надо передавать ее как указатель.

Если функция должна быть методом в той структуре, на которую нужен указатель. 
Если метод изменяет приемник, то приемник должен быть указателем тоже.
Функции, которые влияют на их параметры, не являющиеся получателями. (например reader.WriteTo(writer), io.Writer).

1.2 В каких случаях мы фактически имеем дело с указателями при передаче
параметров, хотя явно их не указываем?

Я думаю что подразумевается использование структур типа map, slice. Они же тоже передаются по 
значению, просто у них внутри указатели и происходит копирование указателей, а не содержимого.


2. Для арифметического умножения и разыменования указателей в Go используется один
и тот же символ — оператор (*). Как вы думаете, как компилятор Go понимает,
в каких случаях в выражении имеется в виду умножение, а в каких — разыменование указателя?

Я думаю,что операция умножения запрашивает два значения, а
оператор разыменования указателя используется для единственной переменной.
Поэтому компилятор легко понимает где в выражении умножение, а где разыменование.